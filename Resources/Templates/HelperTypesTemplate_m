
#import "<prefix_name>HelperTypes.h"
#import "<prefix_name>BaseEntity.h"

__strong static NSDateFormatter *_<prefix_name>DateFormatter = nil;
__strong static NSDateFormatter *_<prefix_name>DateTimeFormatter = nil;

#pragma mark -

@implementation <prefix_name>DateBox

#pragma mark - Init

- (instancetype)initWithDate:(NSDate *)date
{
    self = [super init];
    if (self) {
        self.date = date;
    }
    return self;
}

- (instancetype)initWithString:(NSString *)string
{
    self = [super init];
    if (self) {
        self.stringValue = string;
    }
    return self;
}

#pragma mark - Class Methods

+ (void)setDateFormatter:(NSDateFormatter *)aDateFormatter
{
    _<prefix_name>DateFormatter = aDateFormatter;
}

+ (NSDateFormatter *)dateFormatter
{
    if ( !_<prefix_name>DateFormatter ){
        _<prefix_name>DateFormatter = [[NSDateFormatter alloc] init];
        _<prefix_name>DateFormatter.dateFormat = @"yyyy-MM-dd";
    }
    return _<prefix_name>DateFormatter;
}

#pragma mark - Setters

- (void)setDate:(NSDate *)date
{
    _date = date;
    _stringValue = [[[self class] dateFormatter] stringFromDate:_date];
}

- (void)setStringValue:(NSString *)stringValue
{
    _stringValue = stringValue;
    _date = [[[self class] dateFormatter] dateFromString:_stringValue];
}

@end

@implementation <prefix_name>DateTimeBox

+ (void)setDateFormatter:(NSDateFormatter *)aDateFormatter
{
    _<prefix_name>DateTimeFormatter = aDateFormatter;
}

+ (NSDateFormatter *)dateFormatter
{
    if ( !_<prefix_name>DateTimeFormatter ){
        _<prefix_name>DateTimeFormatter = [[NSDateFormatter alloc] init];
        _<prefix_name>DateTimeFormatter.dateFormat = @"yyyy-MM-dd'T'HH:mm:ss.SSSZ";
    }
    return _<prefix_name>DateFormatter;
}

@end

@implementation NSData (TAPExtensions)

+ (NSData *)dataFromObj:(id)object
{
    id objectToConvert = nil;

    if ([object respondsToSelector:@selector(dictionaryValue)]) {
        objectToConvert = [object dictionaryValue];
    } else if ([NSJSONSerialization isValidJSONObject:object]) {
        objectToConvert = object;
    } else {
        NSLog(@"Provide your custom convert to data from object: %@", object);
    }

    if (!objectToConvert) {
        return nil;
    }

    NSError *error = nil;
    NSData *result = [NSJSONSerialization dataWithJSONObject:objectToConvert options:0 error:&error];
    if (error) {
        NSLog(@"Error during convertation to data: %@", error);
    }
    return result;
}
